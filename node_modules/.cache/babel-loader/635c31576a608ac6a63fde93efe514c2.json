{"ast":null,"code":"var _jsxFileName = \"/Users/harry/Desktop/Websites/covid-19-tracker/src/components/LineGraph.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LineGraph() {\n  _s();\n\n  const [data, setData] = useState({});\n\n  const buildChartData = function (data) {\n    let casesType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"cases\";\n    const chartData = [];\n    let lastDataPoint;\n    data[casesType].forEach(date => {\n      if (lastDataPoint) {\n        const newDataPoint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint\n        };\n        chartData.push(newDataPoint);\n      }\n\n      lastDataPoint = data[casesType][date];\n    });\n    return chartData;\n  };\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\").then(response => response.json()).then(data => {\n      console.log(data);\n      const chartData = buildChartData(data);\n      setData(chartData);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"I am a LineGraph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: true,\n      options: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LineGraph, \"tNVKLF/eI269iIOS4WygXQde5D8=\");\n\n_c = LineGraph;\nexport default LineGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineGraph\");","map":{"version":3,"sources":["/Users/harry/Desktop/Websites/covid-19-tracker/src/components/LineGraph.js"],"names":["React","useEffect","useState","Line","LineGraph","data","setData","buildChartData","casesType","chartData","lastDataPoint","forEach","date","newDataPoint","x","y","push","fetch","then","response","json","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,iBAArB;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMK,cAAc,GAAG,UAACF,IAAD,EAA+B;AAAA,QAAxBG,SAAwB,uEAAZ,OAAY;AACpD,UAAMC,SAAS,GAAG,EAAlB;AACA,QAAIC,aAAJ;AACAL,IAAAA,IAAI,CAACG,SAAD,CAAJ,CAAgBG,OAAhB,CAAyBC,IAAD,IAAU;AAChC,UAAIF,aAAJ,EAAmB;AACjB,cAAMG,YAAY,GAAG;AACnBC,UAAAA,CAAC,EAAEF,IADgB;AAEnBG,UAAAA,CAAC,EAAEV,IAAI,CAACG,SAAD,CAAJ,CAAgBI,IAAhB,IAAwBF;AAFR,SAArB;AAIAD,QAAAA,SAAS,CAACO,IAAV,CAAeH,YAAf;AACD;;AACDH,MAAAA,aAAa,GAAGL,IAAI,CAACG,SAAD,CAAJ,CAAgBI,IAAhB,CAAhB;AACD,KATD;AAUA,WAAOH,SAAP;AACD,GAdD;;AAgBAR,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,KAAK,CAAC,4DAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESb,IAAD,IAAU;AACdgB,MAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAZ;AACA,YAAMI,SAAS,GAAGF,cAAc,CAACF,IAAD,CAAhC;AACAC,MAAAA,OAAO,CAACG,SAAD,CAAP;AACD,KANH;AAOD,GARQ,EAQN,EARM,CAAT;AAUA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,OAAO;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAnCQL,S;;KAAAA,S;AAqCT,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nfunction LineGraph() {\n  const [data, setData] = useState({});\n\n  const buildChartData = (data, casesType = \"cases\") => {\n    const chartData = [];\n    let lastDataPoint;\n    data[casesType].forEach((date) => {\n      if (lastDataPoint) {\n        const newDataPoint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint,\n        };\n        chartData.push(newDataPoint);\n      }\n      lastDataPoint = data[casesType][date];\n    });\n    return chartData;\n  };\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        const chartData = buildChartData(data);\n        setData(chartData);\n      });\n  }, []);\n\n  return (\n    <div>\n      <h1>I am a LineGraph</h1>\n      <Line data options />\n    </div>\n  );\n}\n\nexport default LineGraph;\n"]},"metadata":{},"sourceType":"module"}