{"ast":null,"code":"var _jsxFileName = \"/Users/harry/Desktop/Websites/covid-19-tracker/src/components/LineGraph.js\",\n    _s = $RefreshSig$();\n\nimport numeral from \"numeral\";\nimport React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  legend: {\n    display: false\n  },\n  elements: {\n    point: {\n      radius: 0\n    }\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      }\n    }\n  },\n  scales: {\n    xAxes: [{\n      type: \"time\",\n      time: {\n        format: \"MM/DD/YY\",\n        tooltipFormat: \"ll\"\n      }\n    }],\n    yAxes: [{\n      gridlines: {\n        display: false\n      },\n      ticks: {\n        callback: function (value, index, values) {\n          return numeral(value).format('0a');\n        }\n      }\n    }]\n  }\n};\n\nconst buildChartData = function (data) {\n  let casesType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"cases\";\n  let chartData = [];\n  let lastDataPoint;\n\n  for (let date in data.cases) {\n    if (lastDataPoint) {\n      let newDataPoint = {\n        x: date,\n        y: data[casesType][date] - lastDataPoint\n      };\n      chartData.push(newDataPoint);\n    }\n\n    lastDataPoint = data[casesType][date];\n  }\n\n  ;\n  return chartData;\n};\n\nfunction LineGraph() {\n  _s();\n\n  const [data, setData] = useState({});\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\").then(response => response.json()).then(data => {\n        let chartData = buildChartData(data, \"cases\");\n        setData(chartData);\n      });\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"I am a LineGraph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: {\n        datasets: [{\n          data: data,\n          backgroundColor: \"rgba(204,16,52,0.5)\",\n          borderColor: \"#CC1034\"\n        }]\n      },\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LineGraph, \"tNVKLF/eI269iIOS4WygXQde5D8=\");\n\n_c = LineGraph;\nexport default LineGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineGraph\");","map":{"version":3,"sources":["/Users/harry/Desktop/Websites/covid-19-tracker/src/components/LineGraph.js"],"names":["numeral","React","useEffect","useState","Line","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridlines","ticks","callback","index","values","buildChartData","casesType","chartData","lastDataPoint","date","cases","newDataPoint","x","y","push","LineGraph","setData","fetchData","fetch","then","response","json","datasets","backgroundColor","borderColor"],"mappings":"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","sourcesContent":["import numeral from \"numeral\";\nimport React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\n\nconst options = {\n    legend: {\n        display:false,\n    },\n    elements: {\n        point: {\n            radius: 0,\n        },\n    },\n    maintainAspectRatio: false,\n     tooltips: {\n         mode:\"index\",\n         intersect: false,\n         callbacks: {\n             label:function(tooltipItem, data) {\n                 return numeral(tooltipItem.value).format(\"+0,0\");\n             },\n         },\n     },\n    scales: {\n        xAxes: [\n            {\n                type:\"time\",\n                time: {\n                    format: \"MM/DD/YY\",\n                    tooltipFormat: \"ll\",\n                },\n            },\n        ],\n        yAxes: [\n            {\n                gridlines: {\n                    display:false,\n                },\n                ticks: {\n                    callback:function(value,index,values) {\n                        return numeral(value).format('0a');    \n                    },\n                },\n            },\n        ],\n    },\n};\n\nconst buildChartData = (data, casesType = \"cases\") => {\n    let chartData = [];\n    let lastDataPoint;\n    for(let date in data.cases) {\n      if (lastDataPoint) {\n        let newDataPoint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint,\n        };\n        chartData.push(newDataPoint);\n      }\n      lastDataPoint = data[casesType][date];\n    };\n    return chartData;\n  };\n\nfunction LineGraph() {\n  const [data, setData] = useState({});\n\n\n\n  useEffect(() => {\n      const fetchData = async () => {\n          await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\n          .then((response) => response.json())\n          .then((data) => {\n            let chartData = buildChartData(data, \"cases\");\n            setData(chartData);\n          });\n      }\n      fetchData();\n  }, []);\n\n  return (\n    <div>\n      <h1>I am a LineGraph</h1>\n      <Line data={{\n          datasets: [{\n              data:data,\n              backgroundColor:\"rgba(204,16,52,0.5)\",\n              borderColor: \"#CC1034\"\n          }\n          ]\n      }} options ={options}/>\n    </div>\n  );\n}\n\nexport default LineGraph;\n"]},"metadata":{},"sourceType":"module"}