{"ast":null,"code":"var _jsxFileName = \"/Users/harry/Desktop/Websites/covid-19-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { FormControl, MenuItem, Select, Card, CardContent } from \"@mui/material\";\nimport \"./App.css\";\nimport Infobox from \"./components/Infobox\";\nimport React, { useState, useEffect } from \"react\";\nimport Map from \"./components/Map\";\nimport Table from \"./components/Table\";\nimport { sortData } from \"./util\";\nimport SortIcon from '@mui/icons-material/Sort';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [sortedData, setSortedData] = useState([]);\n  const [unsortedData, setUnSortedData] = useState([]);\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(data => {\n      setCountryInfo(data);\n    });\n  }, []);\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()).then(data => {\n        const countries = data.map(country => ({\n          name: country.country,\n          value: country.countryInfo.iso2\n        }));\n        setSortedData(sortData(data));\n        setUnSortedData(data);\n        setTableData(data);\n        setCountries(countries);\n      });\n    };\n\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async e => {\n    const countryCode = e.target.value;\n    const url = countryCode === \"worldwide\" ? \"https://disease.sh/v3/covid-19/all\" : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url).then(response => response.json()).then(data => {\n      setCountry(countryCode);\n      setCountryInfo(data);\n    });\n  };\n\n  var arraysMatch = function (arr1, arr2) {\n    // Check if all items exist and are in the same order\n    for (var i = 0; arr1.length < i; i++) {\n      if (arr1[i] !== arr2[i]) return false;\n    }\n\n    return true;\n  };\n\n  console.log(countryInfo);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"COVID-19 TRACKER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"app__dropdown\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            onChange: onCountryChange,\n            variant: \"outlined\",\n            value: country,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"worldwide\",\n              children: \"Worldwide\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), countries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: country.value,\n              children: country.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__stats\",\n        children: [/*#__PURE__*/_jsxDEV(Infobox, {\n          title: \"Coronavirus Cases\",\n          total: countryInfo.cases,\n          cases: countryInfo.todayCases\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Infobox, {\n          title: \"Recovered\",\n          total: countryInfo.recovered,\n          cases: countryInfo.todayRecovered\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Infobox, {\n          title: \"Deaths\",\n          total: countryInfo.deaths,\n          cases: countryInfo.todayDeaths\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Map, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"app__right\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Live Cases by Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SortIcon, {\n          class: \"sort__button\",\n          onClick: console.log(arraysMatch(sortData, tableData))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          countries: tableData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Worldwide New Cases\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"bsRv3z4o4+WMpE8RCEugyB+Ghz8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/harry/Desktop/Websites/covid-19-tracker/src/App.js"],"names":["FormControl","MenuItem","Select","Card","CardContent","Infobox","React","useState","useEffect","Map","Table","sortData","SortIcon","App","countries","setCountries","country","setCountry","countryInfo","setCountryInfo","tableData","setTableData","sortedData","setSortedData","unsortedData","setUnSortedData","fetch","then","response","json","data","getCountriesData","map","name","value","iso2","onCountryChange","e","countryCode","target","url","arraysMatch","arr1","arr2","i","length","console","log","cases","todayCases","recovered","todayRecovered","deaths","todayDeaths"],"mappings":"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","sourcesContent":["import {\n  FormControl,\n  MenuItem,\n  Select,\n  Card,\n  CardContent,\n} from \"@mui/material\";\nimport \"./App.css\";\nimport Infobox from \"./components/Infobox\";\nimport React, { useState, useEffect } from \"react\";\nimport Map from \"./components/Map\";\nimport Table from \"./components/Table\";\nimport { sortData } from \"./util\";\nimport SortIcon from '@mui/icons-material/Sort';\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [sortedData, setSortedData] = useState([]);\n  const [unsortedData, setUnSortedData] = useState([]);\n\n  useEffect (() => {\n      fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then(response => response.json())\n      .then(data => {\n        setCountryInfo(data);\n      });\n  }, [])\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2,\n          }));\n\n          setSortedData(sortData(data));\n          setUnSortedData(data);\n          setTableData(data);\n          setCountries(countries);\n        });\n    };\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async (e) => {\n    const countryCode = e.target.value;\n\n    const url =\n      countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setCountry(countryCode);\n        setCountryInfo(data);\n      });\n  };\n\n  var arraysMatch = function (arr1, arr2) {\n\n    // Check if all items exist and are in the same order\n    for (var i = 0; arr1.length < i; i++) {\n      if (arr1[i] !== arr2[i]) return false;\n    }\n    return true;\n  };\n\n  console.log(countryInfo);\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1>COVID-19 TRACKER</h1>\n\n          <FormControl className=\"app__dropdown\">\n            <Select\n              onChange={onCountryChange}\n              variant=\"outlined\"\n              value={country}\n            >\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {countries.map((country) => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n\n        <div className=\"app__stats\">\n          <Infobox\n            title=\"Coronavirus Cases\"\n            total={countryInfo.cases}\n            cases={countryInfo.todayCases}\n          />\n          <Infobox\n            title=\"Recovered\"\n            total={countryInfo.recovered}\n            cases={countryInfo.todayRecovered}\n          />\n          <Infobox\n            title=\"Deaths\"\n            total={countryInfo.deaths}\n            cases={countryInfo.todayDeaths}\n          />\n        </div>\n\n        <Map />\n      </div>\n\n      <Card className=\"app__right\">\n        <CardContent>\n          <h3>Live Cases by Country</h3>\n          <SortIcon class=\"sort__button\" onClick={console.log(arraysMatch(sortData, tableData))}/>\n\n          <Table countries={tableData}  />\n          <h3>Worldwide New Cases</h3>\n\n                  {/*Graph*/}\n        </CardContent>\n\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}